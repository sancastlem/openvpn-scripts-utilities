
# Which TCP/UDP port should OpenVPN listen on?
# If you want to run multiple OpenVPN instances
# on the same machine, use a different port
# number for each one.  You will need to
# open up this port on your firewall.
port 1194

# TCP or UDP server?
;proto tcp
proto udp

# "dev tun" will create a routed IP tunnel,
# "dev tap" will create an ethernet tunnel.
# Use "dev tap0" if you are ethernet bridging
# and have precreated a tap0 virtual interface
# and bridged it with your ethernet interface.
;dev tap
dev tun

# SSL/TLS root certificate (ca), certificate
# (cert), and private key (key).  
ca ca.crt
cert servercert.crt
key serverkey.key

# Diffie hellman parameters.
dh dh.pem

# Server subnet
server 10.8.0.0 255.255.255.0

# Maintain a record of client <-> virtual IP address
# associations in this file.  If OpenVPN goes down or
# is restarted, reconnecting clients can be assigned
# the same virtual IP address from the pool that was
# previously assigned.
ifconfig-pool-persist /var/log/openvpn/ipp.txt

# Redirect all trafic through vpn gateway
;push "redirect-gateway def1"

# If only route certainly IP's or domain
# Service bussiness through VPN
push "route yourdomain.com 255.255.255.255 vpn_gateway 10"
push "route a.b.c.d 255.255.255.255 vpn_gateway 10"

# Rest traffic through LAN
push "route 0.0.0.0 255.255.255.255 net_gateway 10"

# VPN DNS
push "dhcp-option DNS 1.1.1.1"
push "dhcp-option DNS 1.0.0.1"

# Uncomment this directive to allow different
# clients to be able to "see" each other.
;client-to-client

# Uncomment this directive if multiple clients
# might connect with the same certificate/key
# files or common names.
;duplicate-cn

# The keepalive directive causes ping-like
# messages to be sent back and forth over
# the link so that each side knows when
# the other side has gone down.
# Ping every 10 seconds, assume that remote
# peer is down if no ping received during
# a 120 second time period.
keepalive 10 120

# For extra security beyond that provided
# by SSL/TLS, create an "HMAC firewall"
# to help block DoS attacks and UDP port flooding.
# The server and each client must have
# a copy of this key.
# The second parameter should be '0'
# on the server and '1' on the clients.
tls-auth ta.key 0
key-direction 0

# Select a cryptographic cipher.
cipher AES-256-GCM
auth SHA512

# The maximum number of concurrently connected
# clients we want to allow.
max-clients XXX

# It's a good idea to reduce the OpenVPN
# daemon's privileges after initialization.
user nobody
group nogroup

# The persist options will try to avoid
# accessing certain resources on restart
# that may no longer be accessible because
# of the privilege downgrade.
persist-key
persist-tun

# Output a short status file showing
# current connections, truncated
# and rewritten every minute.
status /var/log/openvpn/openvpn-status.log

# To put log in a file, in place to syslog
;log         /var/log/openvpn/openvpn.log
;log-append  /var/log/openvpn/openvpn.log

# Set the appropriate level of log
# file verbosity.
# 0 is silent, except for fatal errors
# 4 is reasonable for general usage
# 5 and 6 can help to debug connection problems
# 9 is extremely verbose
verb 3

# Notify the client that when the server restarts so it
# can automatically reconnect.
explicit-exit-notify 1

# Verify revoked certifies
crl-verify /etc/openvpn/server/crl.pem

# Verify CN active in the VPN server
tls-verify "/etc/openvpn/scripts/cn_verify.sh /etc/openvpn/active_users.txt"
script-security 2
